%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.1 (Build 14B25) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 696 178
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 696 178
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
691.17944 87.860161 m
671.2254 87.860161 l
660.8847 87.860161 l
659.9433 92.888901 658.48474 96.431313 656.49182 98.425468 c
653.25067 101.66938 647.72095 103.34274 640.0882 103.34274 c
632.56677 103.34274 627.34631 102.09174 624.42682 99.57737 c
622.22607 97.693451 621.07434 95.08123 621.07434 91.836082 c
621.07434 87.24086 627.45764 83.574585 640.0882 80.750565 c
654.51251 77.61689 664.85571 74.893196 671.2254 72.699623 c
672.89673 72.067932 674.35522 71.547722 675.40674 71.027504 c
688.26123 64.958336 694.63092 55.743111 694.63092 43.405357 c
694.63092 28.345148 688.36017 17.358713 675.92633 10.45844 c
674.35522 9.616188 672.89673 8.8854103 671.2254 8.1546326 c
663.18445 4.6989222 653.78265 2.9277158 643.23035 2.9277158 c
627.45764 2.9277158 614.70337 5.7517371 604.99231 11.300692 c
598.88239 14.855491 594.31635 19.326859 591.27313 24.714794 c
588.22992 30.103968 586.70831 36.396088 586.70831 43.617157 c
618.46533 43.617157 l
618.46533 38.17844 620.45581 33.881718 624.31549 30.957367 c
628.1875 27.922783 634.7688 26.349752 644.0592 26.349752 c
651.0611 26.349752 656.28156 27.823694 659.73297 30.746805 c
662.45453 33.05061 663.70398 35.566219 663.70398 38.488091 c
663.70398 43.405357 657.4444 47.269806 644.99939 49.99474 c
626.40735 53.970665 614.70465 57.215813 609.9035 59.519619 c
597.16162 65.47731 590.89087 74.678917 590.89087 87.45018 c
590.89087 97.693451 594.1308 106.37608 600.81226 113.48568 c
609.17487 122.3801 621.70648 126.77592 638.32043 126.77592 c
652.0025 126.77592 662.97534 124.78176 671.22668 120.91731 c
671.95654 120.60766 672.58868 120.28562 673.21832 119.8645 c
679.1687 116.63174 683.65802 112.33378 686.66534 106.99538 c
689.67023 101.67062 691.17944 95.280647 691.17944 87.860161 c
691.17944 87.860161 l
h
691.17944 87.860161 m
W*
0 0 696 178 rc
576.70831 136.77592 m
704.63092 136.77592 l
704.63092 -7.0722842 l
576.70831 -7.0722842 l
h
576.70831 136.77592 m
f*
Q
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
674.98615 161.91641 m
674.98615 162.5481 674.88715 163.06831 674.56555 163.48944 c
674.25629 164.00966 673.83563 164.33293 673.2171 164.52986 c
672.79651 164.64258 672.16437 164.74167 671.2254 164.85315 c
670.07495 164.85315 l
666.42554 164.85315 l
666.42554 158.99454 l
670.28522 158.99454 l
671.2254 158.99454 l
672.58746 159.09363 673.52637 159.30418 674.04596 159.8244 c
674.67688 160.35701 674.98615 161.08655 674.98615 161.91641 c
674.98615 161.91641 l
h
677.49738 165.06247 m
678.1283 164.21898 678.43756 163.27887 678.43756 162.23845 c
678.43756 160.77689 677.91803 159.51352 676.86652 158.47308 c
675.82611 157.42027 674.46655 156.78857 672.79651 156.69073 c
673.52637 156.38107 674.04596 156.0578 674.46655 155.64906 c
677.38605 151.77223 l
679.68579 147.90778 l
675.92505 147.90778 l
674.1449 151.04144 l
673.00684 153.02322 672.06537 154.49716 671.2254 155.22794 c
671.12646 155.32703 671.01514 155.43849 670.80481 155.53758 c
668.30591 156.26837 l
666.42432 156.26837 l
666.42432 147.90778 l
663.28217 147.90778 l
663.28217 167.56445 l
670.07373 167.56445 l
670.49432 167.56445 670.91492 167.46536 671.22418 167.46536 c
672.89545 167.46536 674.14368 167.25481 674.98492 166.94514 c
676.02527 166.62311 676.86652 166.0038 677.49738 165.06247 c
677.49738 165.06247 l
h
677.49738 165.06247 m
W*
0 0 696 178 rc
653.28217 177.56445 m
689.68579 177.56445 l
689.68579 137.90778 l
653.28217 137.90778 l
h
653.28217 177.56445 m
f*
Q
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
686.37958 157.94048 m
686.37958 160.66542 685.74872 163.1674 684.38916 165.58269 c
683.0271 167.98434 681.14801 169.86826 678.74683 171.23073 c
676.34814 172.48296 673.83563 173.21373 671.3244 173.21373 c
671.2254 173.21373 l
668.71417 173.21373 666.21527 172.48296 663.81531 171.23073 c
661.4043 169.86826 659.52264 167.98558 658.16315 165.58269 c
656.8147 163.1674 656.08362 160.66542 656.08362 157.94048 c
656.08362 155.32703 656.8147 152.82504 658.16315 150.40976 c
659.42493 148.1171 661.3053 146.22327 663.70398 144.87318 c
666.10394 143.50949 668.61639 142.87903 671.2254 142.87903 c
671.3244 142.87903 l
673.94696 142.87903 676.44586 143.51073 678.85815 144.87318 c
681.25812 146.22327 683.13849 148.1171 684.38916 150.40976 c
685.74872 152.82628 686.37958 155.32703 686.37958 157.94048 c
686.37958 157.94048 l
h
689.41046 157.94048 m
689.41046 154.9059 688.66821 151.87131 686.99817 148.9482 c
685.43945 146.0251 683.23743 143.81914 680.31915 142.25974 c
677.38727 140.57523 674.46777 139.84445 671.3244 139.84445 c
671.2254 139.84445 l
668.09564 139.84445 665.16498 140.57523 662.24426 142.25974 c
659.31238 143.82037 657.12274 146.0251 655.55164 148.9482 c
653.88159 151.87007 653.15295 154.9059 653.15295 157.94048 c
653.15295 161.18562 653.88281 164.21898 655.55164 167.15446 c
657.22174 170.07758 659.42371 172.26991 662.3432 173.84294 c
665.27509 175.41597 668.19336 176.14674 671.2254 176.2446 c
671.3244 176.2446 l
674.35522 176.2446 677.28711 175.41473 680.2066 173.84294 c
683.13849 172.26868 685.43945 170.07758 686.99817 167.15446 c
688.66821 164.22021 689.41046 161.18687 689.41046 157.94048 c
689.41046 157.94048 l
h
689.41046 157.94048 m
W*
0 0 696 178 rc
643.15295 186.2446 m
699.41046 186.2446 l
699.41046 129.84445 l
643.15295 129.84445 l
h
643.15295 186.2446 m
f*
Q
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
573.96643 63.286221 m
573.96643 4.6010723 l
545.43945 4.6010723 l
545.43945 11.090129 l
535.82617 4.8116355 524.33368 1.1453619 512.01239 1.1453619 c
511.69077 1.1453619 l
477.63406 1.355925 449.94827 29.187399 449.94827 63.286221 c
449.94827 97.383804 477.63406 125.20289 511.69077 125.41469 c
512.01239 125.41469 l
524.33368 125.41469 535.82617 121.74718 545.43945 115.47984 c
545.43945 122.27978 l
573.96643 122.27978 l
573.96643 63.286221 l
573.96643 63.286221 l
h
545.43945 56.795925 m
545.43945 69.76413 l
542.40863 85.457268 528.51624 97.38504 512.01239 97.38504 c
511.69077 97.38504 l
492.99854 97.273567 477.84436 82.001556 477.84436 63.28746 c
477.84436 44.559738 492.99854 29.287727 511.69077 29.077164 c
512.01239 29.077164 l
528.51624 29.075926 542.40863 41.102787 545.43945 56.795925 c
545.43945 56.795925 l
h
545.43945 56.795925 m
W*
0 0 696 178 rc
439.94827 135.41469 m
583.96643 135.41469 l
583.96643 -8.8546381 l
439.94827 -8.8546381 l
h
439.94827 135.41469 m
f*
Q
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
440.02817 63.286221 m
440.02817 4.6010723 l
411.51355 4.6010723 l
411.51355 11.090129 l
401.79013 4.8116355 390.40778 1.1453619 378.07538 1.1453619 c
377.76608 1.1453619 l
343.70938 1.355925 316.02359 29.187399 316.02359 63.286221 c
316.02359 97.383804 343.70938 125.20289 377.76608 125.41469 c
378.07538 125.41469 l
390.40903 125.41469 401.79013 121.74718 411.51355 115.47984 c
411.51355 162.64719 l
440.02817 162.64719 l
440.02817 63.286221 l
440.02817 63.286221 l
h
411.51355 56.795925 m
411.51355 69.76413 l
408.4827 85.457268 394.57797 97.38504 378.07538 97.38504 c
377.76608 97.38504 l
359.06149 97.273567 343.91968 82.001556 343.91968 63.28746 c
343.91968 44.559738 359.06149 29.287727 377.76608 29.077164 c
378.07538 29.077164 l
394.57797 29.075926 408.4827 41.102787 411.51355 56.795925 c
411.51355 56.795925 l
h
411.51355 56.795925 m
W*
0 0 696 178 rc
306.02359 172.64719 m
450.02817 172.64719 l
450.02817 -8.8546381 l
306.02359 -8.8546381 l
h
306.02359 172.64719 m
f*
Q
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
273.39395 125.86059 m
273.39395 5.0469704 l
304.41983 5.0469704 l
304.41983 125.86059 l
273.39395 125.86059 l
h
273.39395 125.86059 m
W*
0 0 696 178 rc
263.39395 135.8606 m
314.41983 135.8606 l
314.41983 -4.9530296 l
263.39395 -4.9530296 l
h
263.39395 135.8606 m
f*
Q
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
273.39395 161.78017 m
273.39395 134.48129 l
304.41983 134.48129 l
304.41983 161.78017 l
273.39395 161.78017 l
h
273.39395 161.78017 m
W*
0 0 696 178 rc
263.39395 171.78017 m
314.41983 171.78017 l
314.41983 124.48129 l
263.39395 124.48129 l
h
263.39395 171.78017 m
f*
Q
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
259.60052 63.286221 m
259.60052 4.6010723 l
231.08592 4.6010723 l
231.08592 11.090129 l
221.37486 4.8116355 209.88243 1.1453619 197.54877 1.1453619 c
197.2395 1.1453619 l
163.18279 1.355925 135.49701 29.187399 135.49701 63.286221 c
135.49701 97.383804 163.18279 125.20289 197.2395 125.41469 c
197.54877 125.41469 l
209.88243 125.41469 221.37486 121.74718 231.08592 115.47984 c
231.08592 162.64719 l
259.60052 162.64719 l
259.60052 63.286221 l
259.60052 63.286221 l
h
231.08592 56.795925 m
231.08592 69.76413 l
228.05508 85.457268 214.1627 97.38504 197.54877 97.38504 c
197.2395 97.38504 l
178.5349 97.273567 163.39308 82.001556 163.39308 63.28746 c
163.39308 44.559738 178.5349 29.287727 197.2395 29.077164 c
197.54877 29.077164 l
214.1627 29.075926 228.05508 41.102787 231.08592 56.795925 c
231.08592 56.795925 l
h
231.08592 56.795925 m
W*
0 0 696 178 rc
125.497 172.64719 m
269.60052 172.64719 l
269.60052 -8.8546381 l
125.497 -8.8546381 l
h
125.497 172.64719 m
f*
Q
q
-166 746 m
858 746 l
858 -278 l
-166 -278 l
h
-166 746 m
W*
124.31384 63.286221 m
124.31384 4.6010723 l
95.799217 4.6010723 l
95.799217 11.090129 l
86.07579 4.8116355 74.583351 1.1453619 62.262066 1.1453619 c
61.94043 1.1453619 l
27.995045 1.355925 0.30926916 29.187399 0.30926916 63.286221 c
0.30926916 97.383804 27.995045 125.20289 61.94043 125.41469 c
62.262066 125.41469 l
74.583351 125.41469 86.07579 121.74718 95.799217 115.47984 c
95.799217 122.27978 l
124.31384 122.27978 l
124.31384 63.286221 l
124.31384 63.286221 l
h
95.799217 56.795925 m
95.799217 69.76413 l
92.768379 85.457268 78.876007 97.38504 62.262066 97.38504 c
61.94043 97.38504 l
43.347164 97.273567 28.205347 82.001556 28.205347 63.28746 c
28.205347 44.559738 43.347164 29.287727 61.94043 29.077164 c
62.262066 29.077164 l
78.876007 29.075926 92.768379 41.102787 95.799217 56.795925 c
95.799217 56.795925 l
h
95.799217 56.795925 m
W*
0 0 696 178 rc
-9.690731 135.41469 m
134.31383 135.41469 l
134.31383 -8.8546381 l
-9.690731 -8.8546381 l
h
-9.690731 135.41469 m
f*
ep
end
%%Trailer
%%EOF
